// Making connection table
INSERT INTO connections (id, p1, p2, p3, p4)
VALUES (
    $myID,
    (SELECT p1 FROM customer WHERE Customer_Id = $myID LIMIT 1), -- p2
    (SELECT p1 FROM customer WHERE Customer_Id = (SELECT p1 FROM customer WHERE Customer_Id = $myID) LIMIT 1), -- p3
    (SELECT p1 FROM customer WHERE Customer_Id = (SELECT p1 FROM customer WHERE Customer_Id = (SELECT p1 FROM customer WHERE Customer_Id = $myID)) LIMIT 1) -- p4
);
// Making Views

create view SalesConnections as
select connections.id, connections.p1, connections.p2, connections.p3, connections.p4, customer.Customer_Name, sales.Total_Sales,sales.salesdate
from
    connections
    inner join customer on customer.Customer_Id = connections.id
    inner join sales on connections.id = sales.id;


// for self
WITH TotalSales AS (
    SELECT SUM(CASE WHEN id = $myID THEN Total_Sales ELSE 0 END) AS Total_Sales
    FROM SalesConnections
    WHERE salesdate BETWEEN DATE_FORMAT(NOW(), '%Y-%m-01') AND NOW()
)
SELECT 
    CASE
        WHEN Total_Sales < 5000 THEN 'insufficient balance'
        WHEN Total_Sales >= 30000 THEN Total_Sales * 0.30
        WHEN Total_Sales >= 15000 THEN Total_Sales * 0.25
        WHEN Total_Sales >= 5000 THEN Total_Sales * 0.20
    END AS selfsales
FROM TotalSales;




// for group
SELECT SUM(
        CASE
            WHEN p1 = $myID THEN Total_Sales * 0.05
            ELSE 0
        END
    ) + Sum(
        case
            when p2 = $myID then Total_Sales * 0.03
            else 0
        end
    ) + Sum(
        case
            when p3 = $myID then Total_Sales * 0.02
            else 0
        end
    ) + Sum(
        case
            when p4 = $myID then Total_Sales * 0.02
            else 0
        end
    ) AS Groupsales
FROM SalesConnections WHERE salesdate BETWEEN DATE_FORMAT(NOW(), '%Y-%m-01') AND NOW();");
